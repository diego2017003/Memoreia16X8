LIBRARY ieee;
use ieee.std_logic_1164.all;
ENTITY MemoriaRam IS
	PORT(rw,clk,enable:IN STD_LOGIC;<--rw:'0' para ler o dado,'1' para escrever dado;clk:Sinal de clock;<--enable: habilitar Qualquer operação--> 
		adrss: IN STD_LOGIC_VECTOR(3 downto 0);<-- endereço para operação-->
		file_en:IN STD_LOGIC_VECTOR(7 Downto 0);<--Entrada do dado a ser salvo-->
		SRead:OUT STD_LOGIC_VECTOR(7 Downto 0));<--Saida de leitura-->
END MemoriaRam;
Architecture memory of memoriaRam is
SIGNAL Ri,E0,S0,r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15:STD_LOGIC_VECTOR(7 Downto 0);
SIGNAL Endereco:STD_LOGIC_VECTOR(3 downto 0);
SIGNAL ld:STD_LOGIC_VECTOR(15 downto 0);
COMPONENT ffd4b IS
	port(Dff4: IN STD_LOGIC_VECTOR(3 downto 0);
		clkff4,CLRN4: IN STD_LOGIC;
		Qff4:OUT STD_LOGIC_VECTOR(3 downto 0));
	END COMPONENT;
BEGIN
COMPONENT ffd8 IS
	port(Dff8: IN STD_LOGIC_VECTOR(7 downto 0);
		clkff8,CLRN8: IN STD_LOGIC;
		Qff8:OUT STD_LOGIC_VECTOR(7 downto 0));
	END COMPONENT;
COMPONENT DEMUX1BIT IS
PORT(Den:IN STD_LOGIC;
		Adrs:IN STD_LOGIC_VECTOR(4 downto 0);
		SD0,SD1,SD2,SD3,SD4,SD5,SD6,SD7,SD8,SD9,SD10,SD11,SD12,SD13,SD14,SD15: OUT STD_LOGIC);
END COMPONENT;
BEGIN	
	LAdrs:ffd4b port map(Dff4=>adrss,clkff4=>(clk AND enable),CLRN4=>'0',Qff4=>Endereco);
	DECODE:DEMUX1BIT port map(Den=>Enable,Adrs=>Endereco,SD1=>ld(1),SD2=>ld(2),SD3=>ld(3),SD4=>ld(4),SD5=>ld(5),SD6=>ld(6),SD7=>ld(7),SD8=>ld(8),SD9=>ld(9),SD10=>ld(10),SD11=>ld(11),SD12=>ld(12),SD13=>ld(13),SD14=>ld(14),SD15=>ld(15));
	LFile:ffd8 port map(Dff8=>file_en,clkff8=>(clk AND enable),CLRN8=>'0',Qff8=>E0);
	g0:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(0)),CLRN8=>'0',Qff8=>r0);
	g1:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(1)),CLRN8=>'0',Qff8=>r1);
	g2:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(2)),CLRN8=>'0',Qff8=>r2);
	g3:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(3)),CLRN8=>'0',Qff8=>r3);
	g4:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(4)),CLRN8=>'0',Qff8=>r4);
	g5:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(5)),CLRN8=>'0',Qff8=>r5);
	g6:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(6)),CLRN8=>'0',Qff8=>r6);
	g7:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(7)),CLRN8=>'0',Qff8=>r7);
	g8:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(8)),CLRN8=>'0',Qff8=>r8);
	g9:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(9))),CLRN8=>'0',Qff8=>r9);
	g10:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(10)),CLRN8=>'0',Qff8=>r10);
	g11:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(11)),CLRN8=>'0',Qff8=>r11);
	g12:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(12)),CLRN8=>'0',Qff8=>r12);
	g13:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(13)),CLRN8=>'0',Qff8=>r13);
	g14:ffd8 port map(Dff8=>E0,clkff8=>((rw)AND clk AND ld(14)),CLRN8=>'0',Qff8=>r14);
	g15:ffd8 port map(Df8=>E0,clkff8=>((rw)AND clk AND ld(15)),CLRN8=>'0',Qff8=>r15);
Ri(0)<=NOT(rw) and((ld(0) AND r0(0))OR(ld(1) AND r1(0))OR(ld(2) AND r2(0))OR(ld(3) AND r3(0))OR(ld(4) AND r4(0))OR(ld(5) AND r5(0))OR(ld(6) AND r6(0))OR(ld(7) AND r7(0)))and((ld(8) AND r8(0))OR(ld(9) AND r9(0))OR(ld(10) AND r10(0))OR(ld(11) AND r11(0))OR(ld(12) AND r12(0))OR(ld(13) AND r13(0))OR(ld(14) AND r14(0))OR(ld(15) AND r15(0)));
Ri(1)<=NOT(rw) and((ld(0) AND r0(1))OR(ld(1) AND r1(1))OR(ld(2) AND r2(1))OR(ld(3) AND r3(1))OR(ld(4) AND r4(1))OR(ld(5) AND r5(1))OR(ld(6) AND r6(1))OR(ld(7) AND r7(1)))and((ld(8) AND r8(1))OR(ld(9) AND r9(1))OR(ld(10) AND r10(1))OR(ld(11) AND r11(1))OR(ld(12) AND r12(1))OR(ld(13) AND r13(1))OR(ld(14) AND r14(1))OR(ld(15) AND r15(1)));
Ri(2)<=NOT(rw) and((ld(0) AND r0(2))OR(ld(1) AND r1(2))OR(ld(2) AND r2(2))OR(ld(3) AND r3(2))OR(ld(4) AND r4(2))OR(ld(5) AND r5(2))OR(ld(6) AND r6(2))OR(ld(7) AND r7(2)))and((ld(8) AND r8(2))OR(ld(9) AND r9(2))OR(ld(10) AND r10(2))OR(ld(11) AND r11(2))OR(ld(12) AND r12(2))OR(ld(13) AND r13(2))OR(ld(14) AND r14(2))OR(ld(15) AND r15(2)));
Ri(3)<=NOT(rw) and((ld(0) AND r0(3))OR(ld(1) AND r1(3))OR(ld(2) AND r2(3))OR(ld(3) AND r3(3))OR(ld(4) AND r4(3))OR(ld(5) AND r5(3))OR(ld(6) AND r6(3))OR(ld(7) AND r7(3)))and((ld(8) AND r8(3))OR(ld(9) AND r9(3))OR(ld(10) AND r10(3))OR(ld(11) AND r11(3))OR(ld(12) AND r12(3))OR(ld(13) AND r13(3))OR(ld(14) AND r14(3))OR(ld(15) AND r15(3)));
Ri(4)<=NOT(rw) and((ld(0) AND r0(4))OR(ld(1) AND r1(4))OR(ld(2) AND r2(4))OR(ld(3) AND r3(4))OR(ld(4) AND r4(4))OR(ld(5) AND r5(4))OR(ld(6) AND r6(4))OR(ld(7) AND r7(4)))and((ld(8) AND r8(4))OR(ld(9) AND r9(4))OR(ld(10) AND r10(4))OR(ld(11) AND r11(4))OR(ld(12) AND r12(4))OR(ld(13) AND r13(4))OR(ld(14) AND r14(4))OR(ld(15) AND r15(4)));
Ri(5)<=NOT(rw) and((ld(0) AND r0(5))OR(ld(1) AND r1(5))OR(ld(2) AND r2(5))OR(ld(3) AND r3(5))OR(ld(4) AND r4(5))OR(ld(5) AND r5(5))OR(ld(6) AND r6(5))OR(ld(7) AND r7(5)))and((ld(8) AND r8(5))OR(ld(9) AND r9(5))OR(ld(10) AND r10(5))OR(ld(11) AND r11(5))OR(ld(12) AND r12(5))OR(ld(13) AND r13(5))OR(ld(14) AND r14(5))OR(ld(15) AND r15(5)));
Ri(6)<=NOT(rw) and((ld(0) AND r0(6))OR(ld(1) AND r1(6))OR(ld(2) AND r2(6))OR(ld(3) AND r3(6))OR(ld(4) AND r4(6))OR(ld(5) AND r5(6))OR(ld(6) AND r6(6))OR(ld(7) AND r7(6)))and((ld(8) AND r8(6))OR(ld(9) AND r9(6))OR(ld(10) AND r10(6))OR(ld(11) AND r11(6))OR(ld(12) AND r12(6))OR(ld(13) AND r13(6))OR(ld(14) AND r14(6))OR(ld(15) AND r15(6)));
Ri(7)<=NOT(rw) and((ld(0) AND r0(7))OR(ld(1) AND r1(7))OR(ld(2) AND r2(7))OR(ld(3) AND r3(7))OR(ld(4) AND r4(7))OR(ld(5) AND r5(7))OR(ld(6) AND r6(7))OR(ld(7) AND r7(7)))and((ld(8) AND r8(7))OR(ld(9) AND r9(7))OR(ld(10) AND r10(7))OR(ld(11) AND r11(7))OR(ld(12) AND r12(7))OR(ld(13) AND r13(7))OR(ld(14) AND r14(7))OR(ld(15) AND r15(7)));

	Sa0:ffd8 port map(Dff8=>Ri,clkff8=>(NOT(rw)AND clk),CLRN4=>'0',Qff4=>S0);
	Sout<=S0;
END memory; 